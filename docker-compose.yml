services:
  fastapi-teuxdeux:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi-teuxdeux-clone
    #ports:
    #  - "8080:8080"
    environment:
      - PORT=8080
      - DB_PATH=/app/data/teuxdeux.db
    volumes:
      # Persist the SQLite database
      - ./data:/app/data
      # Persist logs (optional)
      - ./logs:/app/logs
      # Copy static files from the current project
      - ./static:/app/static:ro
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      # HTTP Router (redirect to HTTPS)
      - "traefik.http.routers.todo.entrypoints=web"
      - "traefik.http.routers.todo.rule=Host(`todo.niclasedge.com`)"
      - "traefik.http.routers.todo.middlewares=redirect-to-https"
      # HTTPS Router
      - "traefik.http.routers.todo-secure.entrypoints=websecure"
      - "traefik.http.routers.todo-secure.rule=Host(`todo.niclasedge.com`)"
      - "traefik.http.routers.todo-secure.tls=true"
      - "traefik.http.routers.todo-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.todo-secure.middlewares=user-auth@file"
      # Service
      - "traefik.http.services.todo-secure.loadbalancer.server.port=8080"
      # Redirect middleware
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      # Custom labels
      - "todo.name=TeuxDeux Clone"
      - "todo.url=https://todo.niclasedge.com"
      - "todo.description=FastAPI TeuxDeux Todo Application"

volumes:
  data:
    driver: local
  logs:
    driver: local

networks:
  proxy:
    external: true
